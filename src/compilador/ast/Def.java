/*
 * Generated by classgen, version 1.5
 * 7/12/17 11:45 AM
 */
package ast;

public class Def extends Block {

  public String id;
  public Args listargs;
  public E e;

  public Def (String id, Args listargs, E e) {
    this.id = id;
    this.listargs = listargs;
    if (listargs != null) listargs.setParent(this);
    this.e = e;
    if (e != null) e.setParent(this);
  }

  public void accept(Visitor visitor) {
    visitor.visit(this);
  }

  public void childrenAccept(Visitor visitor) {
    if (listargs != null) listargs.accept(visitor);
    if (e != null) e.accept(visitor);
  }

  public void traverseTopDown(Visitor visitor) {
    accept(visitor);
    if (listargs != null) listargs.traverseTopDown(visitor);
    if (e != null) e.traverseTopDown(visitor);
  }

  public void traverseBottomUp(Visitor visitor) {
    if (listargs != null) listargs.traverseBottomUp(visitor);
    if (e != null) e.traverseBottomUp(visitor);
    accept(visitor);
  }

  public String toString(String tab) {
    StringBuffer buffer = new StringBuffer();
    buffer.append(tab);
    buffer.append("Def(\n");
    buffer.append("  "+tab+id);
    buffer.append("\n");
      if (listargs != null)
        buffer.append(listargs.toString("  "+tab));
      else
        buffer.append(tab+"  null");
    buffer.append("\n");
      if (e != null)
        buffer.append(e.toString("  "+tab));
      else
        buffer.append(tab+"  null");
    buffer.append("\n");
    buffer.append(tab);
    buffer.append(") [Def]");
    return buffer.toString();
  }
}
